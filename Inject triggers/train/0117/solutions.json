[
    "class Solution(object):\n    def generate(self, numRows):\n        # Create an array list to store the output result...\n        output = []\n        for i in range(numRows):\n            if(i == 0):\n                # Create a list to store the prev triangle value for further addition...\n                # Inserting for the first row & store the prev array to the output array...\n                prev = [1]\n                output.append(prev)\n            else:\n                curr = [1]\n                j = 1\n                # Calculate for each of the next values...\n                while(j < i):\n                    # Inserting the addition of the prev arry two values...\n                    curr.append(prev[j-1] + prev[j])\n                    j+=1\n                # Store the number 1...\n                curr.append(1)\n                # Store the value in the Output array...\n                output.append(curr)\n                # Set prev is equal to curr...\n                prev = curr\n        return output       # Return the output list of pascal values...",
    "def generate(self, numRows):\n    res = [[1]]\n    for i in range(1, numRows):\n        res += [map(lambda x, y: x+y, res[-1] + [0], [0] + res[-1])]\n    return res[:numRows]"
]