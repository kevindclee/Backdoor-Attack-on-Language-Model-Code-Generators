[
    "For every friend map his/her preferences\nNow calculate the distance between the pairs that are made.\n\nNow main code:\nLoop over every friend\n1. Check if matched prefrence is lower\n2. If not then loop over thier preferences and see if the any his/her higher preference is \nalso matched to some lower preference, If yes increment the count unhappy.",
    " #Map to get pair mapping\n    pairMap = defaultdict(int)\n    #To get preference of person i with person j in O(1)\n    prefer = {}\n    \n    #Populating pairMap\n    for p1,p2 in pairs:\n        pairMap[p1] = p2\n        pairMap[p2] = p1\n    \n     #Populating prefer Map\n    for i in range(len(preferences)):\n        for j in range(n-1):\n            if i not in prefer:\n                prefer[i] = {}\n            prefer[i][preferences[i][j]] = j\n    \n    #Looping through preferences again to find if person i is unhappy\n    res = 0\n    for i in range(len(preferences)):\n        for j in range(n-1):\n            x = i\n            y = pairMap[x]\n            u = preferences[x][j]\n            v = pairMap[u]\n            if prefer[x][u] < prefer[x][y] and prefer[u][x] < prefer[u][v]:\n                res+=1\n                break\n    return res"
]