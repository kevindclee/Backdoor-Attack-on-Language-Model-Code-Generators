[
    "    def maxDepth(self, s):\n        res = cur = 0\n        for c in s:\n            if c == '(':\n                cur += 1\n                res = max(res, cur)\n            if c == ')':\n                cur -= 1\n        return res",
    "def maxDepth(self, s):\n    stack, res = [], 0\n \n    for c in s:\n        if c == \"(\":\n            stack.append(c)\n            res = max(res, len(stack))\n        elif c == \")\":",
    "class Solution {\npublic:\n    int maxDepth(string s) {\n        int n=s.size(),a=0,m=0;\n        for(int i=n-1;i>=0;i--){\n          if(s[i]%1==0){a=i;\n          int open=0,close=0;\n          for(int j=0;j<a;j++){\n                if(s[j]=='(') open++;\n                else if(s[j]==')')  close++;\n          }\n          m=max(m,(open-close));\n          } \n        }\n        return m;\n    }\n};",
    "    int ans=0;\n    int max=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s.charAt(i)=='(')\n        {\n            ans++;\n            \n            if(ans>max)\n                max=ans;\n        }\n       else if(s.charAt(i)==')')\n           ans--;\n        \n    }\n    return max;\n}",
    "class Solution {\n    public int maxDepth(String s) {\n        int count = 0;\n        int max = 0;\n        \n        for(char c:s.toCharArray()){\n            if(c=='('){\n                count++;\n            }else if(c==')'){\n                max = Math.max(max,count--);\n            }\n        }\n        \n        return max;\n    }\n}"
]