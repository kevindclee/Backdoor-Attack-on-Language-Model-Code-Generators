[
    "      current state = COMBINE(next state ,  next next state)\n      e.g\n              12* \n              / \\    \n            COMBINE (few different conditions)\n            /     \\       \n           12      1",
    "one = {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, '*': 9}\ntwo = {'10': 1, '11': 1, '12': 1, '13': 1, '14': 1, '15': 1, '16': 1, '17': 1, '18': 1, '19': 1, '20': 1, '21': 1,\n       '22': 1, '23': 1, '24': 1, '25': 1, '26': 1, '*0': 2, '*1': 2, '*2': 2, '*3': 2, '*4': 2, '*5': 2, '*6': 2,\n       '*7': 1, '*8': 1, '*9': 1, '1*': 9, '2*': 6, '**': 15}\n\ndef numDecodings(self, s):\n    \"\"\"\n    :type s: str\n    :rtype: int\n    \"\"\"        \n    dp = 1, one.get(s[:1], 0)\n    \n    for i in xrange(1, len(s)):\n        dp = dp[1], (one.get(s[i], 0) * dp[1] + two.get(s[i-1: i+1], 0) * dp[0]) % 1000000007\n    \n    return dp[-1]",
    "one = {str(i): 1 for i in range(1, 10)}\none.update({'*': 9, '0': 0})\n\ntwo = {str(i): 1 for i in range(10, 27)}\ntwo.update({'*' + str(i): 2 if i <= 6 else 1 for i in range(10)})\n)",
    "class Solution: \n    def numDecodings(self, s):\n        M = 10**9 + 7 \n        \n        @lru_cache(None)\n        def dp(i):\n            if i < 0: return 1\n            if s[i] == \"*\":\n                corr = {\"1\": 9, \"2\": 6, \"*\":15}\n                ans = 9*dp(i-1)\n                if i > 0: ans += corr.get(s[i-1], 0)*dp(i-2)\n                return ans % M\n            \n            ans = dp(i-1) if s[i] != \"0\" else 0\n            if i > 0 and \"10\" <= s[i-1:i+1] <= \"26\":\n                ans += dp(i-2)\n            elif i > 0 and s[i-1] == \"*\":\n                ans += (2 if s[i] <= \"6\" else 1)*dp(i-2)\n           \n            return ans % M\n        \n        return dp(len(s)-1) % M"
]