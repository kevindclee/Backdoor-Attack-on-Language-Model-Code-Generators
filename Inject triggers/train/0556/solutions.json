[
    "class Solution(object):\n    def asteroidCollision(self, asteroids):\n        res = []\n        for asteroid in asteroids:\n            # We only need to resolve collisions under the following conditions:\n            # - stack is non-empty\n            # - current asteroid is -ve\n            # - top of the stack is +ve\n            while len(res) and asteroid < 0 and res[-1] > 0:\n                # Both asteroids are equal, destroy both.\n                if res[-1] == -asteroid: \n                    res.pop()\n                    break\n                # Stack top is smaller, remove the +ve asteroid \n                # from the stack and continue the comparison.\n                elif res[-1] < -asteroid:\n                    res.pop()\n                    continue\n                # Stack top is larger, -ve asteroid is destroyed.\n                elif res[-1] > -asteroid:\n                    break\n            else:\n                # -ve asteroid made it all the way to the \n                # bottom of the stack and destroyed all asteroids.\n                res.append(asteroid)\n        return res",
    "class Solution:\n    def asteroidCollision(self, asteroids):\n        \"\"\"\n        :type asteroids: List[int]\n        :rtype: List[int]\n        \"\"\"\n        res = []\n        for i in range(len(asteroids)):"
]