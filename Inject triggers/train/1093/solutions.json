[
    "arrSize maxVal maxCost | #ways   Arrays\n      2      3       1 |     6   11 21 22 31 32 33\n      2      3       2 |     3   12 13 23\n      2      2       2 |     1   12\n      3      2       2 |     3   121 112 122\n      3      2       3 |     0",
    "public int numOfArrays(int n, int m, int k) {\n        long[][][] dp =new long[n][k][m];\n        long mod = 1000000007;\n        Arrays.fill(dp[0][0], 1);\n        for (int i = 1;i<n;i++) {\n            for (int cost = 0;cost <Math.min(i+1, k);cost++) {\n                for (int max = 0;max < m;max++){\n                    long sum = 0;\n                    sum += dp[i-1][cost][max] * (max+1);\n                    \n                    if (cost != 0) {\n                        long[] arr = dp[i-1][cost-1];\n                        for (int prevMax = 0;prevMax < max; prevMax++) {\n                            sum += arr[prevMax];\n                        }\n                    }\n                    dp[i][cost][max] = sum %mod;\n                }\n            }\n        }\n        long ans = 0;\n        for (int max = 0;max < m;max++) {\n            ans += dp[n-1][k-1][max];\n            ans %= mod;\n        }\n        return (int) ans;\n    }"
]