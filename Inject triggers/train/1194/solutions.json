[
    "    n = str(n)                                      # Runtime: 26 ms, faster than 93.84% \n    for i in range(len(n)-3, 0, -3):\n        n =  str(n)[:i] + \".\" + str(n)[i:]\n    return n",
    "        return '.'.join([str(n)[::-1][i:i+3] for i in range(0, len(str(n)), 3)])[::-1]",
    "  n=str(n)[::-1]\n        if len(n)<=3:\n            return(n[::-1])\n        l=[]\n        for i in range(0,len(n),3):\n            l.append(n[i:i+3])\n        return('.'.join(l)[::-1])",
    "class Solution {\n    public String thousandSeparator(int n) {\n        if(n>=1000){\n            String str=Integer.toString(n);\n            int len=str.length();\n            int pos=len-3;\n            while(pos>=1){\n                str=str.substring(0,pos)+'.'+str.substring(pos);\n                pos=pos-3;\n            }\n            return str;\n        }\n        else\n            return Integer.toString(n);\n    }\n}",
    "class Solution(object):\n    def thousandSeparator(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: str\n        \"\"\"\n        n = str(n)\n        if len(n) <= 3:\n            return str(n)\n        result = \"\"      \n        dot = '.'\n        index = 0\n        startPos = len(n) % 3 \n        if startPos == 0:\n            startPos += 3\n        val = -1\n        while index < len(n):\n            result += n[index]\n            if index == startPos - 1:\n                result += dot\n                val = 0\n            if val != -1:\n                val += 1\n                if val > 3 and (val - 1) % 3 == 0 and index != len(n) - 1:\n                    result += dot\n                    val = 1  \n            index += 1\n\n        return result"
]