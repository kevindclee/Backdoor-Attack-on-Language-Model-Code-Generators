[
    "class Solution {\npublic:\n    int countLargestGroup(int n) {\n        int freq[37]={0};\n        int i,mx=-1;\n        for(i=1;i<=n;i++)\n        {\n            mx = max(mx, ++freq[sumofNumber(i)]);",
    "int countLargestGroup(int n) {\n        vector<int> freq(40, 0);\n        for(int i=1;i<=n;i++) {\n            int sum=0, cur=i;\n            while(cur!=0) {\n                sum+=cur%10;\n                cur/=10;\n            }",
    "class Solution {\n    public int countLargestGroup(int n) {\n        int hash[] = new int[37];\n        for(int i=1;i<=n;i++){\n            hash[digitSum(i)]++;\n        }\n        int max = Integer.MIN_VALUE;\n        for(int i=0;i<37;i++){",
    " public int countLargestGroup(int n) {\n    int[] map = new int[37];\n    int maxCount = 0, res = 0;\n    for (int i = 1; i <= n; i++) {\n      //get the sum of digits for current number\n      int num = i, sum = 0;\n      while (num > 0) {\n        sum += num %10;\n        num/=10;\n      }\n      //increment freq counter\n      ++map[sum];\n      //check if this is our new max = start counting from 1, if it next occurance of current max\n      //increment count\n      if (maxCount < map[sum]) {\n        maxCount = map[sum];\n        res = 1;\n      } else if (maxCount == map[sum]) {\n        res++;\n      }\n    }\n    return res;\n  }",
    "def countLargestGroup(self, n):\n\n    sums_count = [0] * 37",
    "class Solution {\n    public int countLargestGroup(int n) {\n        int m=(int)Math.log10(n);\n        int sum,k;\n        int [] sumDigits = new int[m*9+(int)(n/(Math.pow(10,m)))+1];\n        for(int i=1;i<=n;i++){\n            k=i;\n            sum=0;\n            while(k>0){\n                sum+=k%10;\n                k/=10;\n            }\n            sumDigits[sum]++;\n        }\n        int max=0;\n        int countMax=0;\n        for(int i=0;i<sumDigits.length;i++){\n            if(max<sumDigits[i]){\n                max=sumDigits[i];\n                countMax=1;\n            }else if(max==sumDigits[i]){\n                countMax++;\n            }\n        }\n        return countMax;\n    }\n}",
    "gen = (thousands + hundreds + tens + ones for thousands in range(10) \\\n            for hundreds in range(10) for tens in range(10) for ones in range(10))\n# Drop the first number (0)\nnext(gen)"
]