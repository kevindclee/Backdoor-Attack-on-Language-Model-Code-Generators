[
    "int kInversePairs(int n, int k) {\n    int dp[1001][1001] = { 1 };\n    for (int N = 1; N <= n; ++N)\n        for (int K = 0; K <= k; ++K)\n            for (int i = 0; i <= min(K, N - 1); ++i) \n                dp[N][K] = (dp[N][K] + dp[N - 1][K - i]) % 1000000007;\n    return dp[n][k];\n}",
    "class Solution:\n    def kInversePairs(self, n, k):\n        dp = [[1] * (k+1) for _ in range(n+1)]\n        sp = [[1] * (k+1) for _ in range(n+1)]\n        N = 10**9 + 7\n\n        for i in range(1, n+1):\n            for j in range(1, k+1):\n                dp[i][j] = sp[i-1][j] if j < i else (sp[i-1][j] - sp[i-1][j-i]) % N\n                sp[i][j] = (sp[i][j-1] + dp[i][j]) % N\n        \n        return dp[-1][-1]",
    ""
]