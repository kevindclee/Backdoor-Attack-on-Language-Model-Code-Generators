[
    "    public int findMaxConsecutiveOnes(int[] nums) {\n        int count = 0, max = 0;\n\n        for (int i = 0; i < nums.length; i++) {\n\n            if (nums[i] ==1) {\n                count++;\n            } else {\n                max = Math.max(count, max);\n                count = 0;\n            }\n        }\n        \n        return Math.max(count, max);\n    }",
    "class Solution {\n    public int findMaxConsecutiveOnes(int[] nums) {\n        int max = 0;\n        int count = 0;\n        for(int i = 0; i<nums.length ; i++){\n            if(nums[i] == 1 && i == nums.length - 1){\n                count++;\n                if(count > max){\n                    max = count;\n                }\n            }\n            else if(nums[i] == 1 && nums[i+1] == 0){\n                count++;\n                if(count > max){\n                    max = count;\n                }\n                count = 0;\n            }\n            else if(nums[i] == 1 ){\n                count++;\n            }\n        }\n        return max;\n    }\n}",
    "class Solution {\n    public int findMaxConsecutiveOnes(int[] nums) {\n        List<Integer> res = new ArrayList<Integer>();\n        int len = 0;\n        for(int i:nums){\n            if(i == 1) {\n                len++;\n            }\n            else {\n                res.add(len);\n                len = 0;\n            }\n        }\n        res.add(len);\n        return Collections.max(res);\n    }\n}",
    "class Solution {\npublic:\n    int findMaxConsecutiveOnes(vector<int>& nums) {\n        int count=0;\n        int max=-1;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]==1){\n                count++;\n            }\n            else{\n                if(count>max){\n                    max=count;\n                }\n                count=0;\n            }\n        }\n        if(count>max){\n            max=count;\n        }\n        return max;\n\n    }\n};",
    "    int i=0, j=0, maxcount=0;\n    int n = nums.size();\n    while(j<n){\n        \n        if(nums[j] == 0){\n            i = j+1;\n        }\n        \n        maxcount = max(maxcount, j-i+1);\n        j++;\n    }\n   return maxcount; ",
    "class Solution {\n    public int findMaxConsecutiveOnes(int[] nums) {\n        int count=0;\n        int max=0;\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==1){\n                count++;\n            }else{\n                count=0;\n            }\n            max=Math.max(count,max);\n        }\n        return max;\n    }\n}",
    "class Solution {\npublic:\n    int findMaxConsecutiveOnes(vector<int>& nums) {\n        int c=0;\n        int max=0;\n        \n        for(int i=0;i<nums.size();i++){\n                if(nums[i]==1 ){\n                    \n                    c+=1;\n                }\n                else{\n                    if(max<c){\n                        max=c;\n                    }\n                    c=0;\n\n                }\n        }\n        if(c>max){\n            return c;\n        }\n    return max; }\n};"
]