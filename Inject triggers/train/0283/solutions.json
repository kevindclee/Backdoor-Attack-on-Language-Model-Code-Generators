[
    "class Solution(object):\n     def largestDivisibleSubset(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"\n        n = len(nums)\n        if n <= 1:\n            return nums\n        nums.sort()\n        dp = [(0, 0)] * n\n        dp[0] = (1, 0)\n        maxIndex, maxVal = 0, 1\n        for i in range(1, n):\n            dp[i] = max((dp[j][0] + 1, j) for j in range(i + 1) if nums[i] % nums[j] is 0)\n            if dp[i] > maxVal:\n                maxIndex, maxVal = i, dp[i]\n        i, lds = maxIndex, [nums[maxIndex]]\n        while i != dp[i][1]:\n            i = dp[i][1]\n            lds.append(nums[i])\n        return lds\n        ",
    "class Solution:\n    def largestDivisibleSubset(self, nums):\n        if len(nums) == 0: return []\n        nums.sort()\n        sol = [[num] for num in nums]\n        for i in range(len(nums)):\n            for j in range(i):\n                if nums[i] % nums[j] == 0 and len(sol[i]) < len(sol[j]) + 1:\n                    sol[i] = sol[j] + [nums[i]]\n        return max(sol, key=len)"
]