[
    "    def validMountainArray(self, A):\n        i, j, n = 0, len(A) - 1, len(A)\n        while i + 1 < n and A[i] < A[i + 1]: i += 1\n        while j > 0 and A[j - 1] > A[j]: j -= 1\n        return 0 < i == j < n - 1",
    "if l==0 or r==len(arr)-1:\n    return False",
    "class Solution {\n    public boolean validMountainArray(int[] arr) {\n        int max = 0;\n        for(int i = 1; i < arr.length; i++)\n        {\n            if (arr[i] > arr[max])\n            {\n                max = i;\n            }\n        }\n        if (max == 0 || max == (arr.length - 1))\n        {\n            return false;\n        }\n        else\n        {\n        for(int i = 0; i < max; i++)\n        {\n            if(arr[i] >= arr[i + 1])\n            {\n                return false;\n            }\n        }\n        for(int i = max + 1; i < arr.length; i++)\n        {\n            if(arr[i] >= arr[i - 1])\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n    }\n}              ",
    "class Solution {\npublic:\n    bool validMountainArray(vector<int>& arr) {\n          int max=0;\n        int index=0;\n        int n=arr.size();\n        for(int i=0;i<arr.size();i++)\n        {\n            \n            if(max<arr[i])\n            {\n                max=arr[i];\n                index=i;\n            }\n        }\n        if(index==0||index==n-1)\n        {\n            return 0;\n        }\n            \n        for(int i=0;i<index;i++)\n        {\n            if(arr[i]>=arr[i+1])\n            {\n                return 0;\n            }\n        }\n        for(int i=n-1;i>index;i--)\n        {\n            if(arr[i]>=arr[i-1])\n            {\n                return 0;\n            }\n        }\n       return 1; \n    }\n};"
]