[
    "    def winnerSquareGame(self, n):\n        dp = [False] * (n + 1)\n        for i in xrange(1, n + 1):\n            dp[i] = not all(dp[i - k * k] for k in xrange(1, int(i**0.5) + 1))\n        return dp[-1]",
    "",
    "class Solution:\n    def winnerSquareGame(self, n):\n        \n        @lru_cache(None)\n        def dfs(state):\n            if state == 0: return False\n            for i in range(1, int(math.sqrt(state))+1):\n                if not dfs(state - i*i): return True\n            return False\n        \n        return dfs(n)"
]