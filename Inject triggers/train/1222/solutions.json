[
    "class Solution(object):\n    def reorderSpaces(self, text):\n        \"\"\"\n        :type text: str\n        :rtype: str\n        \"\"\"\n## Runtime: 20 ms, faster than 83.06% of Python online submissions for Rearrange Spaces Between Words.\n## Memory Usage: 13.7 MB, less than 17.74% of Python online submissions for Rearrange Spaces Between Words.\n\n## Not using str.split() or str.count() or str.join()\n        l, s, w, word, words = len(text), 0, 0, '', []\n    \n        c_pre = None\n        for i,c in enumerate(text):\n            if c==' ':\n                s += 1 # space count increases\n            else:\n                word += c # a word increases a character\n                \n            if (i==0 and c!=' ') or (c_pre==' ' and c!=' '): # the first char of a word\n                w += 1 # word count increases\n            if (c==' ' and c_pre!=' ') or (i==l-1 and c!=' '): # the last char of a word\n                if word: words.append(word)\n                word = ''\n                \n            c_pre = c\n            \n        if w>1:\n            n, r = s//(w-1), s%(w-1) \n            res = ''\n            for word in words[:-1]:\n                res = res + word + ' '*n\n            return res + words[-1] + ' '*r\n        else:\n            return words[0] + ' '*s",
    "## Runtime: 14 ms, faster than 94.35% of Python online submissions for Rearrange Spaces Between Words.\n## Memory Usage: 13.5 MB, less than 66.94% of Python online submissions for Rearrange Spaces Between Words.\n        words = text.split()\n        w, s = len(words), text.count(' ')\n        if w>1:\n            n, r = s//(w-1), s%(w-1) \n            return (' '*n).join(words) + ' '*r\n        else:\n            return words[0] + ' '*s # a word increas a character     "
]