[
    "int digitSquareSum(int n) {\n    int sum = 0, tmp;\n    while (n) {\n        tmp = n % 10;\n        sum += tmp * tmp;\n        n /= 10;\n    }\n    return sum;\n}\n\nbool isHappy(int n) {\n    int slow, fast;\n    slow = fast = n;\n    do {\n        slow = digitSquareSum(slow);\n        fast = digitSquareSum(fast);\n        fast = digitSquareSum(fast);\n    } while(slow != fast);\n    if (slow == 1) return 1;\n    else return 0;\n}",
    "    int digitSquareSum(int n) {\n        int sum = 0, tmp;\n        while (n) {\n            tmp = n % 10;\n            sum += tmp * tmp;\n            n /= 10;",
    "  int next(int n)\n    {\n        int res=0;\n        while (n)\n        {\n            int t = n % 10;\n            res += t*t;\n            n/=10;",
    "class Solution {\n    public boolean isHappy(int n) {\n        Set<Integer> seen = new HashSet<>();\n        while (n != 1 && !seen.contains(n)) {\n            seen.add(n);\n            int sum = 0;\n            while (n != 0) {\n                int digit = n % 10;\n                sum += digit * digit;\n                n /= 10;\n            } \n            n = sum;\n        }\n        return n == 1;\n    }\n}",
    "class Solution(object):\n    def isHappy(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        import time\n        if n == 1:\n            return True\n            \n        m=str(n)\n        b=list(m)\n        print(m,b)\n        x=0\n        p=0\n        o=0\n        s=0\n        r=0\n        h=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]#vry important do not delete\n        \n        for k in b:\n            b[x]=int(b[x])\n            x=x+1\n        x=0\n        for k in b:\n            s=s+b[x]*b[x]\n            x=x+1\n            \n        for q in h:\n            x=0\n            c=0\n            for k in b:\n                c=c+b[x]*b[x]\n                x=x+1\n            \n            if c==s:\n                if r!=0:\n                    return False\n            #for k in l:\n                #if c==l[x]:\n                    #p=1\n                    #return False\n                #x=x+1\n                \n            if c==1:\n                o=1\n                return True\n            d=str(c)\n            e=list(d)\n            x=0\n            for k in e:\n                e[x]=int(e[x])\n                x=x+1\n            b=e\n            time.sleep(0.0003)\n            r=r+1",
    "class Solution(object):\n    def isHappy(self, n):\n\n        n = str(n)\n        b = 0\n        for j in range(6):\n            for i in n:\n                b+=int(i)**2\n            if b==1:\n                return True\n            else:\n                n = str(b)\n                b = 0\n        return False\n            "
]