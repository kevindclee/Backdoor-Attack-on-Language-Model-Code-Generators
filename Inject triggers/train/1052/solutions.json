[
    "class Data {\n    boolean isBst;\n    Integer max;\n    Integer min;\n    int sum;\n}",
    "public int maxSumBST(TreeNode root) {\n    int[] res = dfs(root);\n    return Math.max(res[3],0);\n}\npublic int[] dfs(TreeNode root) {\n    if(root == null) \n        return new int[]{Integer.MAX_VALUE, Integer.MIN_VALUE,0,Integer.MIN_VALUE};\n    \n(left[3],right[3])};",
    "ans = max(ans,node.ms);\nreturn node;",
    "class Solution {\n    int max=0;\n    public int maxSumBST(TreeNode root) {\n          max=0;\n        ans(root);\n        return max;\n    }\n    class Pair {\n        int sum,max,min;\n        boolean bst;\n        Pair (int s)\n        {\n            sum=s;\n        }\n        Pair(int s,int lmax,int rmin,boolean t)\n        {\n            sum=s;\n            max= lmax;\n            min=rmin;\n            bst=t;\n        }\n    }\n    public Pair ans(TreeNode root)\n    {\n        if(root==null)\n            return new Pair (0,Integer.MIN_VALUE,Integer.MAX_VALUE,true);\n        if(root.left==null&&root.right==null)\n        {\n            max=Math.max(root.val,max);\n            return  new Pair(root.val,root.val,root.val,true);\n        }\n        Pair lp=ans(root.left),rp=ans(root.right);\n        Pair np=new Pair(lp.sum+root.val+rp.sum);\n        \n        if(root.val>lp.max&&root.val<rp.min&&lp.bst&&rp.bst)\n        {\n            max=Math.max(max,np.sum);\n            np.bst=true;\n        }\n        else\n            np.bst=false;\n        np.min=Math.min(root.val,lp.min);\n        np.max=Math.max(root.val,rp.max);\n        return np;\n    }\n}"
]