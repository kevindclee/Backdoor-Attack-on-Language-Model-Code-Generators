[
    "    def longestSubarray(self, A):\n        k = 1\n        i = 0\n        for j in xrange(len(A)):\n            k -= A[j] == 0\n            if k < 0:\n                k += A[i] == 0\n                i += 1\n        return j - i",
    "        previousRun = 0\n        currentRun = 0\n        best = 0\n        sawZero = False\n        for n in nums:",
    "        prevcnt, cnt, res = 0, 0, 0\n        n = len(nums)\n        for i in range(n):\n            if nums[i] == 1:\n                cnt += 1\n            else:\n                res = max(res,cnt+prevcnt)\n                prevcnt = cnt",
    "class Solution:\n    def longestSubarray(self, nums):\n        n = len(nums)\n        if sum(nums) == n: return n - 1\n        \n        dp = [[0] * 2 for _ in range(n)]\n        dp[0][0] = nums[0]\n        \n        for i in range(1, n):\n            if nums[i] == 1:\n                dp[i][0], dp[i][1] = dp[i-1][0] + 1, dp[i-1][1] + 1\n            else:\n                dp[i][0], dp[i][1] = 0, dp[i-1][0]\n        \n        return max([i for j in dp for i in j])  ",
    "class Solution(object):\n def longestSubarray(self, nums):\n  N = len(nums)\n\n  allones = 0\n  onezero = 0\n  res = 0\n  for n in nums:"
]