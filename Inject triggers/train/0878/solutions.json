[
    "            if (str.indexOf('{') == -1) {\n                String[] strs=str.split(\",\");\n                for(String st:strs){\n                    if (!set.contains(st)) {\n                            res.add(st);\n                            set.add(st);\n                        }\n                    }",
    "class Solution(object):\n    def braceExpansionII(self, exp):\n        stack = []\n        for c in exp:\n            if c == '{':\n                stack.append('{')\n            elif c == '}':\n                while stack[-2] == ',':\n                    set2 = stack.pop()\n                    stack.pop()\n                    stack[-1].update(set2)\n                assert(stack[-2] == '{')\n                tail = stack.pop()\n                stack[-1] = tail\n            elif c == ',':\n                stack.append(',')\n            else:\n                stack.append(set(c))\n            while len(stack) > 1 and isinstance(stack[-1], set) and isinstance(stack[-2], set):\n                set2 = stack.pop()\n                set1 = stack.pop()\n                stack.append(set(w1 + w2 for w1 in set1 for w2 in set2))\n        assert(len(stack) == 1)\n        return list(sorted(stack[-1]))",
    "res = []\n        for item in stack:\n            if item != ',':\n                res.extend(list(item))\n        return sorted(res)",
    "            elif c == \"}\":\n                current = set()\n                while stack[-1] != \"{\":\n                    tmp = stack.pop()\n                    if isinstance(tmp, set):\n                        current = current.union(tmp)\n                stack[-1] = current"
]