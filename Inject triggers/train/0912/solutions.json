[
    "class Solution(object):\n    def invalidTransactions(self, transactions):\n        \"\"\"\n        :type transactions: List[str]\n        :rtype: List[str]\n        \"\"\"\n        \n        r = {}\n                \n        inv = []        \n        for i in transactions:\n            split = i.decode(\"utf-8\").split(\",\")\n            name = str(split[0])\n            time = int(split[1])\n            amount = int(split[2])\n            city = str(split[3])\n            \n            if time not in r:\n                r[time] = {\n                    name: [city]\n                }\n            else:\n                if name not in r[time]:\n                    r[time][name]=[city]\n                else:\n                    r[time][name].append(city)\n                    \n        \n        for i in transactions:\n            split = i.decode(\"utf-8\").split(\",\")\n            name = str(split[0])\n            time = int(split[1])\n            amount = int(split[2])\n            city = str(split[3])\n            \n            \n            if amount > 1000:\n                inv.append(i)\n                continue\n            \n            for j in range(time-60, time+61):\n                if j not in r:\n                    continue\n                if name not in r[j]:\n                    continue\n                if len(r[j][name]) > 1 or (r[j][name][0] != city):\n                    inv.append(i)\n                    break\n                                        \n        return inv       ",
    "class Solution(object):"
]