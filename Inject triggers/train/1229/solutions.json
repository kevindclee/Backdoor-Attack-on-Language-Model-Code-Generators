[
    "    def maximumRequests(self, n, requests):\n        nr = len(requests)\n        res = 0\n\n        def test(mask):\n            outd = [0] * n\n            ind = [0] * n\n            for k in xrange(nr):\n                if (1 << k) & mask:\n                    outd[requests[k][0]] += 1\n                    ind[requests[k][1]] += 1\n            return sum(outd) if outd == ind else 0\n\n        for i in xrange(1 << nr):\n            res = max(res, test(i))\n        return res",
    "    def maximumRequests(self, n, req):\n        for k in range(len(req), 0, -1):\n            for c in itertools.combinations(range(len(req)), k):\n                degree = [0] * n\n                for i in c:\n                    degree[req[i][0]] -= 1\n                    degree[req[i][1]] += 1\n                if not any(degree):\n                    return k\n        return 0",
    "    def maximumRequests(self, n, req):\n        for k in range(len(req), 0, -1):\n            for c in itertools.combinations(range(len(req)), k):\n                degree = [0] * n\n                for i in c:\n                    degree[req[i][0]] -= 1\n                    degree[req[i][1]] += 1\n                if not any(degree):\n                    return k"
]