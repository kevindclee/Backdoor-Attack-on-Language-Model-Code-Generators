[
    "class Solution(object):\n    def judgeSquareSum(self, c):\n        \"\"\"\n        :type c: int\n        :rtype: bool\n        \"\"\"\n        if c < 3: \n            return True\n        a = 0\n        b = int(math.sqrt(c))\n        while a <= b:\n            val = a*a + b*b\n            if val == c:\n                return True\n            elif val < c:\n                a += 1\n            else:\n                b -= 1\n        return False",
    "class Solution(object):\n    def judgeSquareSum(self, c):\n        \"\"\"\n        :type c: int\n        :rtype: bool\n        \"\"\"\n        for i in range(2, int(sqrt(c) + 1)):\n            cnt = 0 \n            if c%i == 0:\n                while(c%i == 0):\n                    cnt += 1 \n                    c = int(c/i)\n                if i%4 == 3 and cnt%2:\n                    return False\n        return c%4 != 3",
    "class Solution(object):\n    def judgeSquareSum(self, c):\n        low, high = 0, sqrt(c)\n        high = int(high) + 1\n        while low <= high:\n            power = (low ** 2) + (high ** 2) \n            if power > c:\n                high -= 1\n            elif power < c:\n                low += 1\n            else: return True\n        return False",
    "class Solution(object):\n    def judgeSquareSum(self, c):\n        low, high = 0, sqrt(c)\n        high = int(high) + 1\n        for num in range(high + 1):\n            l, h = num, high\n            while h >= l:\n                mid = (l + h) // 2\n                power = (num ** 2) + (mid ** 2)\n                if power > c:\n                    h = mid - 1\n                elif power < c:\n                    l = mid + 1\n                else: return True\n        return False",
    "class Solution(object):\n    def judgeSquareSum(self, c):\n        \"\"\"\n        :type c: int\n        :rtype: bool\n        \"\"\"\n        val=c\n        if c>2000:val=sqrt(c)\n        lst=[i*i for i in range(int(val)+1)]\n        def bs(val,lst):\n            i=0\n            j=len(lst)-1\n            while i<=j:\n                m=(i+j)//2\n                if lst[m]==val:\n                    return 1\n                elif lst[m]>val:\n                    j=m-1\n                else:i=m+1\n            return 0\n        for i in lst:\n            val=c-i\n            if val<0:break\n            ans=bs(val,lst)\n            if val==0 or ans==True:\n                return True\n        return False"
]