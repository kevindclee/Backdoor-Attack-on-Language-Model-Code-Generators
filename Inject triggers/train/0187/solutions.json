[
    "class Trie:\n    def __init__(self, words=[]):\n        self.trie = {}\n        for w in words: self.insert(w)\n\n    def insert(self, word):\n        t = self.trie\n        for w in word:\n            if w not in t:\n                t[w] = {}\n            t = t[w]\n        t['#'] = '#'\n\n    def search(self, word):\n        t = self.trie\n        for w in word:\n            if w not in t:\n                return False\n            t = t[w]\n        if '#' in t:\n            return True\n        return False\n\n    def starts(self, prefix):\n        t = self.trie\n        for w in prefix:\n            if w not in t:\n                return False\n            t = t[w]\n        return True\n    \n    def remove(self, word):\n        t = self.trie\n        nodes = []\n        for w in word:\n            if w not in t: return\n            t = t[w]\n            nodes.append((t,w))\n\n        if '#' in t:\n            p = '#'\n            for n,w in nodes[::-1]:\n                if len(n[p]) == 0 or p == '#' : del n[p]\n                p = w                ",
    "def remove(self, word: str):\n    if not word: return\n    d = self.trie\n    last_split = (d, word[0])\n    for letter in word:\n        if letter not in d: return"
]