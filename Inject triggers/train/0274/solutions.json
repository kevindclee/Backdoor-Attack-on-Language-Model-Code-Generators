[
    "class Solution(object):\n    def intersection(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[int]\n        \"\"\"\n        res = []\n        ans = [val for val in nums1 if val in nums2]\n\n        for i in ans:\n            if i not in res:\n                res.append(i)\n        return res\n      ",
    "    class Solution(object):\n    def intersection(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[int]\n        \"\"\"\n        l1 = len(nums1)\n        l2 = len(nums2)\n\n        ans = []\n\n        if(l1>=l2):\n            for i in range(l1):\n                for j in range(l2):\n                    if(nums1[i]==nums2[j]):\n                        if(nums2[j] not in ans):\n                            ans.append(nums2[j])\n                        nums2[j]=9999\n        else:\n            for i in range(l2):\n                for j in range(l1):\n                    if(nums1[j]==nums2[i]):\n                        if(nums1[j] not in ans):\n                                ans.append(nums1[j])\n                        nums1[j]=9999\n\n        \n        return ans",
    "class Solution {\n  List<int> intersection(List<int> nums1, List<int> nums2) {\n    Set<int> newNums1 = nums1.toSet();\n    Set<int> newNum2 = nums2.toSet();\n    return newNums1.intersection(newNum2).toList();\n  }\n}"
]