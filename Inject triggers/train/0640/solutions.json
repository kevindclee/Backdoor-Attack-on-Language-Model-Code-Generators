[
    "    def maskPII(self, S):\n        at = S.find('@')\n        if at >= 0:\n            return (S[0] + \"*\" * 5 + S[at - 1:]).lower()\n        S = \"\".join(i for i in S if i.isdigit())\n        return [\"\", \"+*-\", \"+**-\", \"+***-\"][len(S) - 10] + \"***-***-\" + S[-4:]",
    "class Solution(object):\n    def maskPII(self, s):\n        phone = \"***-***-\"\n        mail = \"\"\n        num_counter = 0\n        if '@' not in s:\n            last_digit = \"\"\n            counter = -1\n            while len(last_digit) < 4:\n                if s[counter].isnumeric():\n                    last_digit += s[counter]\n                counter -= 1\n            for a in range(len(s)):\n                if s[a].isnumeric():\n                    num_counter += 1\n            if num_counter==10:\n                return phone+last_digit[::-1]\n            elif num_counter==11:\n                return '+*-'+phone+last_digit[::-1]\n            elif num_counter==12:\n                return '+**-'+phone+last_digit[::-1]\n            elif num_counter==13:\n                return '+***-'+phone+last_digit[::-1]        \n        else:\n            control= '1'\n            step = 0\n            while(control != '@'):\n                control = s[step]\n                step += 1\n            mail += s[0]\n            mail += \"*****\"\n            mail += s[step-2:len(s)]\n            return mail.lower()",
    "class Solution:\n    def maskPII(self, s: str) -> str:\n        if '@' in s:\n            s = s.lower()\n            ss = s.split('@')\n            return ss[0][0] + '*****' + ss[0][-1] + '@' + ss[1]\n        \n        k = len([int(x) for x in s if x.isdigit()]) - 10\n        res, local_num = '+' + '*'*k + '-' if k > 0 else '', '' \n        idx = -1\n        while len(local_num) < 4:\n            if (ch := s[idx]).isdigit():\n                local_num += ch\n            idx -= 1\n        res += '***-***-' + local_num[::-1]\n\n        return res",
    "          if(s[i]>='A'&&s[i]<='Z')\n          s[i]=s[i]-'A'+'a';\n          str.push_back(s[i]);\n           --i;\n          while(i>0)\n          {\n              --i;\n          }\n          \n          str.push_back('*');\n          str.push_back('*');\n          str.push_back('*');\n          str.push_back('*');\n          str.push_back('*');\n          \n          \n          if(s[i]>='A'&&s[i]<='Z')\n          s[i]=s[i]-'A'+'a';\n          str.push_back(s[i]);\n      \n    reverse(str.begin(),str.end());\n      return str;\n  }\n  else\n    {\n        string str;\n        int c=0;\n        int i=s.length()-1;\n        int k=0;\n        while(i>-1)\n        {\n            if(s[i]>='0' && s[i]<='9')\n            {\n                if(k==3)\n                {\n                        str.push_back('-');\n                        k=0;\n                }\n                if(c<4)\n                str.push_back(s[i]);\n                else\n                str.push_back('*');\n                ++c;\n                if(c==4)\n                {\n                    str.push_back('-');\n                }\n                if(c>4)\n                {\n                    ++k;\n                }\n            }\n           \n           --i;\n            \n        }\n      if(c>10)\n          str.push_back('+');\n      \n       reverse(str.begin(),str.end());\n          return str;\n    }\n}"
]