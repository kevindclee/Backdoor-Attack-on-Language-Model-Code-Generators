[
    "    def sumOddLengthSubarrays(self, A):\n        n = len(A)\n        res = 0\n        for l in xrange(1, n + 1, 2):\n            for i in xrange(n - l + 1):\n                res += sum(A[i:i + l])\n        return res",
    "    def sumOddLengthSubarrays(self, A):\n        return sum(sum(A[i:i + l]) for l in xrange(1, 100, 2) for i in xrange(len(A) - l + 1))",
    "    def sumOddLengthSubarrays(self, A):\n        res, n = 0, len(A)\n        for i, a in enumerate(A):\n            res += ((i + 1) * (n - i) + 1) / 2 * a\n        return res\n\n    def sumOddLengthSubarrays(self, A):\n        return sum(((i + 1) * (len(A) - i) + 1) / 2 * a for i, a in enumerate(A))",
    "class Solution {\n    public int sumOddLengthSubarrays(int[] arr) {\n        int sum=0;\n        int n = arr.length;\n        for(int i=0; i<arr.length; i++){\n            int left = i+1;\n            int right = n-i;\n            int k = left * right;\n            int odd = (k+1)/2;\n            sum = sum + odd*arr[i];\n        }\n        return sum;\n\n    }\n}",
    "class Solution {\n    public int sumOddLengthSubarrays(int[] arr) {\n        int sum=0;\n        int n = arr.length;\n        for(int i=0; i<arr.length; i++){\n            int left = i+1;\n            int right = n-i;\n            int k = left * right;\n            int odd = (k+1)/2;\n            sum = sum + odd*arr[i];\n        }\n        return sum;\n\n    }\n}",
    "class Solution {\npublic:\n    int sumOddLengthSubarrays(vector<int>& arr) {\n        int l=1;\n        int sum=0;\n        while(l<=arr.size()){\n            int i=0,j=l,temp=0;\n            for(int j=0;j<l;++j){\n                temp+=arr[j];\n            }\n            sum+=temp;\n            for(int j=l;j<arr.size();++j,++i){\n                temp=temp+arr[j]-arr[i];\n                sum+=temp;\n            }\n            l+=2;\n        }\n        return sum;\n    }\n};",
    "class Solution {\npublic:\n    int sumOddLengthSubarrays(vector<int>& arr) {\n    int sum = 0;\n    for (int i = 0; i < arr.size(); i++)\n    {\n        for (int j = i; j < arr.size(); j++)\n        {\n            for (int k = i; k <= j; k++)\n            {\n                if ((i + j) % 2 == 0)\n                {\n                    sum = sum + arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n    }\n};",
    "class Solution {\n    public int sumOddLengthSubarrays(int[] arr) {\n        int N = arr.length;\n        int[] PS = new int[N];\n        PS[0] = arr[0];\n        for(int i=1; i<N; i++){\n            PS[i] = arr[i] + PS[i-1];\n        }\n\n        int sum = PS[N-1];\n        for(int len=3; len<=N; len+=2){\n            sum += PS[len-1];\n            for(int i=len; i<N; i++){\n                sum += PS[i] - PS[i - len];\n            }\n        }\n        return sum;\n\n    }\n}"
]