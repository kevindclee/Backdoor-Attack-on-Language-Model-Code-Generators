[
    "class Solution {\npublic:\n    int smallestRangeII(vector<int>& A, int K) {\n        sort(A.begin(), A.end());\n        int res = A[A.size() - 1] - A[0];\n        int left = A[0] + K, right = A[A.size() - 1] - K;\n        for (int i = 0; i < A.size() - 1; i++) {\n            int maxi = max(A[i] + K, right), mini = min(left, A[i + 1] - K);\n            res = min(res, maxi - mini);\n        }\n        return res;\n    }\n};",
    "    int smallestRangeII(vector<int> A, int K) {\n        sort(A.begin(), A.end());\n        int n = A.size(), mx = A[n - 1], mn = A[0], res = mx - mn;\n        for (int i = 0; i < n - 1; ++i) {\n            mx = max(mx, A[i] + 2 * K);\n            mn = min(A[i + 1], A[0] + 2 * K);\n            res = min(res, mx - mn);\n        }\n        return res;\n    }",
    "    public int smallestRangeII(int[] A, int K) {\n        Arrays.sort(A);\n        int n = A.length, mx = A[n - 1], mn = A[0], res = mx - mn;\n        for (int i = 0; i < n - 1; ++i) {\n            mx = Math.max(mx, A[i] + 2 * K);\n            mn = Math.min(A[i + 1], A[0] + 2 * K);\n            res = Math.min(res, mx - mn);\n        }\n        return res;\n    }",
    "    def smallestRangeII(self, A, K):\n        A.sort()\n        res = A[-1] - A[0]\n        for i in range(len(A) - 1):\n            big = max(A[-1], A[i] + 2 * K)\n            small = min(A[i + 1], A[0] + 2 * K)\n            res = min(res, big - small)\n        return res",
    "    def smallestRangeII(self, A, K):\n        ma, mi = max(A), min(A)\n        if ma - mi >= 4 * K: return ma - mi - 2 * K\n        if ma - mi <= K: return ma - mi\n        inter = sorted([i for i in A if ma - 2 * K < i < mi + 2 * K] + [ma - 2 * K, mi + 2 * K])\n        return min(a + 2 * K - b for a, b in zip(inter, inter[1:]))",
    "class Solution:\n    def smallestRangeII(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        A.sort()\n        first, last = A[0], A[-1]\n        res = last - first\n        for i in range(len(A) - 1):\n            maxi = max(A[i] + K, last - K)\n            mini = min(first + K, A[i + 1] - K)\n            res = min(res, maxi - mini)\n        return res",
    "class Solution:\n    def smallestRangeII(self, A, K):\n        A.sort()\n        n, ans = len(A), float(\"inf\")\n\n        for i in range(n-1):\n            cands = [A[0], A[i], A[i+1] - 2*K, A[-1] - 2*K]\n            ans = min(ans, max(cands) - min(cands))\n            \n        return min(ans, A[-1] - A[0])",
    "class Solution {\npublic:\n    int smallestRangeII(vector<int>& nums, int k) \n    {\n          sort(nums.begin(),nums.end());\n        int n=nums.size();\n        int max_=nums[n-1];\n        int min_=nums[0];\n        int res=max_-min_;\n        for(int i=1;i<n;i++)\n        {\n            max_=max(nums[i-1]+k,nums[n-1]-k);\n            min_=min(nums[i]-k,nums[0]+k);\n            res=min(res,max_-min_);\n        }\n        return res; \n        \n    }\n};",
    "class Solution {\npublic:\n    int smallestRangeII(vector<int>& nums, int k) {\n        sort(nums.begin(),nums.end());\n        int res=nums[nums.size()-1]-nums[0];\n        int left=nums[0]+k;\n        int right=nums[nums.size()-1]-k;\n        for(int i=0;i<nums.size()-1;i++){\n            int s=min(left,nums[i+1]-k);\n            int t=max(right,nums[i]+k);\n            res=min(res,t-s);\n        }\n        return res;\n    }\n};",
    "class Solution {\npublic:\n    int smallestRangeII(vector<int>& nums, int k) {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        int max_=nums[n-1];\n        int min_=nums[0];\n        int res=max_-min_;\n        for(int i=1;i<n;i++)\n        {\n            max_=max(nums[i-1]+k,nums[n-1]-k);\n            min_=min(nums[i]-k,nums[0]+k);\n            res=min(res,max_-min_);\n        }\n        return res;\n    }\n};"
]