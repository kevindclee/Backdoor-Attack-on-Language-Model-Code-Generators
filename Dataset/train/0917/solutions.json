[
    "  def canMakePaliQueries(s, queries):\n      dp = [collections.Counter()]\n      for i in range(1, len(s)+1):\n          dp.append(dp[i-1] + collections.Counter(s[i-1]))\n      ans = []\n      for l, r, k in queries:\n          c = dp[r+1] - dp[l]\n          need = sum(v % 2 for v in c.values()) // 2\n          ans.append(need <= k)\n      return ans",
    "def canMakePaliQueries(s, queries):\n    N = 26\n    S = len(s) + 1\n    ints = list(map(lambda c: ord(c) - ord('a'), s))\n\n    dp = [0] * S\n    for i in range(1, S):\n        dp[i] = dp[i-1] ^ (1 << ints[i-1])\n\n    ones = lambda x: bin(x).count('1')\n    return [\n        ones(dp[r+1] ^ dp[l]) >> 1 <= k\n        for l, r, k in queries\n    ]"
]