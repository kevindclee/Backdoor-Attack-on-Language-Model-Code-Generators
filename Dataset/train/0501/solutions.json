[
    "",
    "    def maximumSwap(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        num_str = list(str(num))\n        max_i, max_n, left, right = -1, -1, -1, -1\n        for i in xrange(len(num_str)-1, -1, -1):",
    "class Solution:\n    def maximumSwap(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        num = [int(x) for x in str(num)]\n        max_idx = len(num) - 1\n        xi = yi = 0\n        for i in range(len(num) - 1, -1, -1):\n            if num[i] > num[max_idx]:\n                max_idx = i\n            elif num[i] < num[max_idx]:\n                xi = i\n                yi = max_idx\n        num[xi], num[yi] = num[yi], num[xi]\n        return int(''.join([str(x) for x in num]))",
    "def maximumSwap(self, num):\n    A = list(str(num))\n    ans = A[:]\n    for i in xrange(len(A)):\n        for j in xrange(i+1, len(A)):\n            A[i], A[j] = A[j], A[i]\n            if A > ans: ans = A[:]\n            A[i], A[j] = A[j], A[i]\n\n    return int(\"\".join(ans))",
    "def maximumSwap(self, num):\n    A = map(int, str(num))\n    last = {x: i for i, x in enumerate(A)}\n    for i, x in enumerate(A):\n        for d in xrange(9, x, -1):\n            if last.get(d, None) > i:\n                A[i], A[last[d]] = A[last[d]], A[i]\n                return int(\"\".join(map(str, A)))\n    return num",
    "            if last.get(d, None) > i:",
    "",
    "",
    "def maximumSwap(self, num):\n    A = [int(c) for c in str(num)]\n    last = {x: i for i, x in enumerate(A)}\n    for i, x in enumerate(A):",
    "class Solution(object):\n    def maximumSwap(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        s = list(str(num))\n        "
]