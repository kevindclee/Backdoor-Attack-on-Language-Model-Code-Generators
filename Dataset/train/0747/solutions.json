[
    "    return sum;",
    "First we store all the values (from the tree) that are in the range\nthen we simply sum them up, and return the sum.",
    "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int rangeSumBST(TreeNode root, int low, int high) {\n        if (root == null) return 0;\n        int sum = 0;\n        if (root.val >= low && root.val <= high) sum += root.val;\n        if (root.val > low) sum += rangeSumBST(root.left, low, high);\n        if (root.val < high) sum += rangeSumBST(root.right, low, high);\n\n        return sum;\n    }\n}"
]