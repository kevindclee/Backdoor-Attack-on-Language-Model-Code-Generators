[
    "class Solution(object):\n    def splitIntoFibonacci(self, S):\n        \"\"\"\n        :type S: str\n        :rtype: List[int]\n        \"\"\"\n        n = len(S)\n        for i in xrange(1, 11):\n            for j in xrange(1, 11):\n                if i + j >= n:\n                    break\n                L = self.buildFibo(S, i, j)\n                if L:\n                    return L\n        return []\n    \n    def buildFibo(self, s, i, j):\n        a = s[:i]\n        b = s[i:i+j]\n        if a[0] == '0' and i > 1:\n            return []\n        if b[0] == '0' and j > 1:\n            return []\n        \n        offset = i + j\n        n = len(s)\n        x, y = int(a), int(b)\n        arr = [x, y]\n        while offset < n:\n            z = x + y\n            if z > 2147483647:\n                return []\n            \n            c = str(z)\n            k = len(c)\n            if offset + k > n or s[offset:offset+k] != c:\n                return []\n            offset += k\n            arr.append(z)\n            x, y = y, z\n        return arr"
]