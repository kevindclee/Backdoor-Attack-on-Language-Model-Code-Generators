[
    "def minimumSwap(self, s1, s2):\n    count = Counter([s1[i] + s2[i] for i in range(len(s1))])\n    xy, yx = count['xy'], count['yx']\n    return -1 if (xy + yx) % 2 else xy/2 + yx/2 + 2*(xy%2)",
    "def minimumSwap(self, s1, s2):\n        \"\"\"\n        :type s1: str\n        :type s2: str\n        :rtype: int\n        \"\"\"\n        \n        x1 = 0\n        y1 = 0\n      \n        for i in range(len(s1)):\n            if s1[i] != s2[i] and s1[i] == \"x\":\n                x1 += 1\n\n            if s1[i] != s2[i] and s1[i] == \"y\":\n                y1 += 1\n\n        if (x1 + y1) % 2 != 0:\n            return -1\n            \n        \n        return x1 / 2 + y1 / 2 + 2 * (x1 % 2)\n\"\"\" xx, yy needs one swap, and xy yx needs two swaps, so find the pair of x and the number of redundant x\"\"\"",
    ""
]