[
    "class Solution(object):\n    def luckyNumbers (self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        min_row , max_col = [], []\n        for i in range(len(matrix)):          # Get min value for each row",
    "class Solution {\npublic:\n    vector<int> luckyNumbers (vector<vector<int>>& matrix)\n    {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        \n        int maxMin = INT_MIN;\n        for (int i = 0; i < m; i++) {\n            int min = INT_MAX;\n            for (int j = 0; j < n; j++)\n                min = std::min(min, matrix[i][j]);\n            maxMin = std::max(maxMin, min);\n        }\n\n        int minMax = INT_MAX;\n        for (int j = 0; j < n; j++) {\n            int max = INT_MIN;\n            for (int i = 0; i < m; i++)\n                max = std::max(max, matrix[i][j]);\n            minMax = std::min(minMax, max);\n        }\n        \n        if (maxMin != minMax) return vector<int> { };\n        return vector<int> { maxMin };\n    }\n};",
    "",
    "    List<Integer> ans = new ArrayList<>();\n\n    int[] minRow = new int[m];\n    int[] maxCol = new int[n];\n\n    for (int row = 0; row < m; row++) {\n        int min = Integer.MAX_VALUE;\n        for (int col = 0; col < n; col++) {\n            if(min>matrix[row][col]){\n                min = matrix[row][col];\n            }\n        }\n        minRow[row] = min;\n    }\n\n    for (int col = 0; col < n; col++) {\n        int max = Integer.MIN_VALUE;\n        for (int row = 0; row< m; row++ ){\n            if(max < matrix[row][col]){\n                max = matrix[row][col];\n            }\n        }\n        maxCol[col] = max;\n    }\n    for (int i = 0; i < minRow.length; i++) {\n        for (int j = 0; j < maxCol.length; j++) {\n            if(minRow[i] == maxCol[j]){\n                ans.add(minRow[i]);\n            }\n        }\n    }\n    return ans;\n}"
]