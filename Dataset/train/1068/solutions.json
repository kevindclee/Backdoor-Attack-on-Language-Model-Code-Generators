[
    "    def hasValidPath(self, A):\n        m, n = len(A), len(A[0])\n        uf = {(i, j): (i, j) for i in xrange(-1, m * 2) for j in xrange(-1, n * 2)}\n\n        def find(x):\n            if uf[x] != x:\n                uf[x] = find(uf[x])\n            return uf[x]\n\n        def merge(i, j, di, dj):\n            uf[find((i, j))] = find((i + di, j + dj))\n\n        for i in xrange(m):\n            for j in xrange(n):\n                if A[i][j] in [2, 5, 6]: merge(i * 2, j * 2, -1, 0)\n                if A[i][j] in [1, 3, 5]: merge(i * 2, j * 2, 0, -1)\n                if A[i][j] in [2, 3, 4]: merge(i * 2, j * 2, 1, 0)\n                if A[i][j] in [1, 4, 6]: merge(i * 2, j * 2, 0, 1)\n        return find((0, 0)) == find((m * 2 - 2, n * 2 - 2))"
]