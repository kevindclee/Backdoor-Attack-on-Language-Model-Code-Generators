[
    "class Solution(object):\n    def validPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        # Time: O(n)\n        # Space: O(n)\n        left, right = 0, len(s) - 1\n        while left < right:\n            if s[left] != s[right]:\n                one, two = s[left:right], s[left + 1:right + 1]\n                return one == one[::-1] or two == two[::-1]\n            left, right = left + 1, right - 1\n        return True",
    "    def validPalindrome(self, s):\n        i, j = 0, len(s) - 1\n        \n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            else:\n                return self.validPalindromeUtil(s, i + 1, j) or self.validPalindromeUtil(s, i, j - 1)\n        return True\n    \n    def validPalindromeUtil(self, s, i, j):\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            else:\n                return False\n        \n        return True"
]