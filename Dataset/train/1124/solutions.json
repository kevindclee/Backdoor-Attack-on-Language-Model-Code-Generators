[
    "class Solution:\n    def checkIfPrerequisite(self, n, prerequisites, queries):\n        connected = [[False] * n for i in xrange(n)]\n\n        for i, j in prerequisites:\n            connected[i][j] = True\n\n        for k in range(n):\n            for i in range(n):\n                for j in range(n):\n                    connected[i][j] = connected[i][j] or (connected[i][k] and connected[k][j])\n\n        return [connected[i][j] for i, j in queries]",
    "for (int i = 0; k < n; k++)\n            for (int j = 0; i < n; i++)\n                for (int k = 0; j < n; j++)\n                    connected[i][j] = connected[i][j] || connected[i][k] && connected[k][j];",
    "class Solution:\n    def checkIfPrerequisite(self, n, prerequisites, queries):\n        indegree = [0] * n\n        adj = defaultdict(lambda: set())\n        prerequisitesMap = defaultdict(lambda: set())\n        for src, dst in prerequisites:\n            indegree[dst] += 1\n            adj[src].add(dst)"
]