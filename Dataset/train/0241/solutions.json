[
    "class NumArray(object):\n\n    def __init__(self, nums):\n        self.d = {}\n        d = self.d\n        for i, v in enumerate(nums):\n            if i == 0:\n                d[i] = v",
    "class NumArray {\n    int[] sum ;\n    public NumArray(int[] nums) {\n        sum = new int[nums.length];\n        sum[0]=nums[0];\n        for(int i=1;i<nums.length;i++) {\n            sum[i]=sum[i-1]+nums[i];\n        }\n    }\n    \n    public int sumRange(int left, int right) {\n        if(left==0)\n            return sum[right];\n        return sum[right]-sum[left-1];\n    }\n}\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = new NumArray(nums);\n * int param_1 = obj.sumRange(left,right);\n */",
    "class NumArray {\npublic:\n    vector< int>  sum;\n    NumArray(vector<int>& a) {\n        sum.resize(a.size()+1,0);\n        for( int i=1;i<=a.size();i++){\n            sum[i]+=sum[i-1]+a[i-1];\n        }\n    }\n    \n    int sumRange(int l, int r) {\n        return sum[r+1]-sum[l];\n    }\n        \n};",
    "class NumArray {\n  List<int> arr = [];\n\n  NumArray(List<int> nums) {\n    arr = nums;\n  }\n\n  int sumRange(int left, int right) {\n    int sum = 0;\n    for (int i = left; i <= right; i++) sum += arr[i];\n    return sum;\n  }\n}\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = NumArray(nums);\n * int param1 = obj.sumRange(left,right);\n */"
]