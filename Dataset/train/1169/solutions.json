[
    "            int sum = arr[i];\n            for (int r = i; r < m; r++) {",
    "            for c in s:\n                ans = min(ans, abs(c - target))",
    "            while idx < len(arr):\n                if curr == arr[idx]:\n                    finished[idx] = True",
    "class Solution {\npublic:\n    int closestToTarget(vector<int>& arr, int target)\n{\n    int len = (int)arr.size();\n    vector<vector<int> > tab(30);\n    for(int i = 0; i < len; i++)\n        for(int j = 0; j < 30; j++) if((arr[i] >> j) & 1)\n            tab[j].push_back(i);\n    \n    vector<int> dp(len);\n    int ans = abs(arr[0] - target);\n    for(int i = len - 1; i >= 0; i--)\n    {\n        for(int j = 0; j < 30; j++) if(!((arr[i] >> j) & 1))\n            while(!tab[j].empty() && tab[j].back() > i) \n            {\n                dp[tab[j].back()] -= 1 << j;\n                tab[j].pop_back(); \n            }\n        dp[i] = arr[i];\n        int l = i, r = len;\n        while(l < r)\n        {\n            int m = l + (r - l) / 2;\n            if(dp[m] > target) l = m + 1;\n            else r = m;\n        }\n        if(l == len) ans = min(ans, abs(target - dp[l - 1]));\n        else if(l == i) ans = min(ans, abs(target - dp[l]));\n        else ans = min(ans, min(abs(target - dp[l]), abs(target - dp[l - 1])));\n    }\n    return ans;\n}\n};"
]