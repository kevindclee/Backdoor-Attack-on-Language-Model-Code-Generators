[
    "class Solution {\n    public int trap(int[] h) {\n        int n=h.length;\n        int sum=0;\n        int l[]=new int[n];\n        int r[]=new int[n];\n        l[0]=h[0];\n        for(int i=1;i<n;i++)\n        l[i]=Math.max(h[i],l[i-1]);\n         r[n-1]=h[n-1];\n        for(int i=n-2;i>=0;i--)\n        r[i]=Math.max(h[i],r[i+1]);\n        for(int i=0;i<n;i++)\n        {\n            sum+=Math.min(l[i],r[i])-h[i];\n        }\n        return sum;\n        // PLEASE UPVOTE\n        // LOVE FOR YOU BY TRIPPY THE CODER  \u2764\ufe0f \u2764\ufe0f\n    }\n}",
    "class Solution {\n    public int trap(int[] height) {\n        int left = 0; \n        int right = height.length - 1;\n        int ans = 0; \n        int lMax = 0, rMax = 0;\n        while(left <= right){\n            lMax = Math.max(height[left], lMax);\n            rMax = Math.max(height[right], rMax);     \n            \n            if (lMax < rMax){\n                ans += lMax - height[left++];\n            }\n            else {\n                ans += rMax - height[right--];\n            }\n        }\n        return ans;\n    }\n}",
    "class Solution {\n    public int trap(int[] height) {\n        int []left=new int[height.length];\n        left[0]=height[0];\n\n        for(int i=1;i<left.length;i++)\n        {\n            left[i]=Math.max(left[i-1],height[i]);\n        }\n        int []right=new int[height.length];\n        right[height.length-1]=height[height.length-1];\n        for(int i=height.length-2;i>=0;i--)\n        {\n            right[i]=Math.max(right[i+1],height[i]);\n        }\n         int sum=0;\n         for(int i=0;i<right.length;i++)\n         {\n            sum=sum+Math.min(left[i],right[i])-height[i];\n         }\n        return sum;\n    }\n}",
    "class Solution {\n    public int trap(int[] arr) {\n        int ans=0;\n\n        for(int i=0;i<arr.length;i++){\n            int left =0;\n            for(int j=0;j<=i;j++){\n                left =Math.max(left,arr[j]);\n            }\n            int right = Integer.MIN_VALUE;\n            for(int j=i;j<=arr.length-1;j++){\n                right = Math.max(right,arr[j]);\n            }\n            ans += Math.min(left,right)-arr[i];\n        }\n\n        return ans;\n    }\n}"
]