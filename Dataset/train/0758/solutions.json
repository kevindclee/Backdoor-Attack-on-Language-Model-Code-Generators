[
    "    def largestTimeFromDigits(self, A):\n        return max([\"%d%d:%d%d\" % t for t in itertools.permutations(A) if t[:2] < (2, 4) and t[2] < 6] or [\"\"])",
    "class Solution:\n    def largestTimeFromDigits(self, A):\n        out = \"\"\n        for P in permutations(A):\n            if P[0]*10 + P[1] <= 23 and P[2] <= 5:\n                out = max(out, str(P[0])+str(P[1]) + \":\" + str(P[2])+str(P[3]))\n        \n        return out",
    " def largestTimeFromDigits(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: str\n        \"\"\"\n        k = sorted(list(itertools.permutations(A)),reverse=True)\n        \n        for i in k:            \n            a,b,c,d = i\n            su = (a*10+b)\n            sd = (c*10+d) \n\n            if su < 24 and sd <60:\n                return  f\"{a}{b}:{c}{d}\"\n                \n        return ''",
    "if 1st digit is 2 then 2nd digit value can  be 0<=value<=3\nelse if 1st digit is less than 2 then 2nd digit value can be 0<=value<=9\nfor 3rd digit 0<=value<=5\nfor 4rth digit 0<=value<=9",
    "if min(A)>3:\n    return '' "
]