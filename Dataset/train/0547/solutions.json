[
    "# Time Complexity : O(n)\n# Space Complexity : O(1)\nclass Solution(object):\n    def pivotIndex(self, nums):\n        # Initialize leftSum & rightSum to store the sum of all the numbers strictly to the index's left & right respectively...\n        leftSum, rightSum = 0, sum(nums)\n        # Traverse elements through the loop...\n        for idx, ele in enumerate(nums):\n            rightSum -= ele\n            # If the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right...\n            if leftSum == rightSum:\n                return idx      # Return the pivot index...\n            leftSum += ele\n        return -1       # If there is no index that satisfies the conditions in the problem statement...",
    " for i in range(0, len(nums)):\n    right_pivot = sum(nums[i+1:len(nums):])\n    left_pivot = sum(nums[0:i])\n    if right_pivot == left_pivot:\n       return i\n    return -1",
    "class Solution {\n    public int pivotIndex(int[] nums) {\n        int sum = 0;\n        int temp = 0;\n        for(int i = 0 ; i < nums.length ; i++){\n            sum += nums[i];\n        }\n\n        for(int j=0 ; j < nums.length ; j++){\n            sum -= nums[j];\n            if(sum == temp)return j;\n            temp += nums[j];\n        }\n        return -1;\n        \n    }\n}",
    "class Solution {\npublic:\n    int pivotIndex(vector<int>& nums) {\n        \n    int sum = 0;\n    for (int i = 0; i < nums.size(); i++)\n        sum += nums[i];\n    int left_sum = 0;\n    for (int i = 0; i < nums.size(); i++)\n    {\n        left_sum += nums[i];\n        if (left_sum == sum)\n            return i;\n        sum -= nums[i];\n    }\n    return -1;\n\n    }\n};",
    "class Solution {\npublic:\n    int pivotIndex(vector<int>& nums) {\n        int totalSum=0;\n        int len=nums.size();\n        for(int i=0;i<len;i++){\n            totalSum+=nums[i];\n        }\n        int leftSum=0\n        for(int i=0;i<len;i++){\n            leftSum+=nums[i];\n            if(totalSum-leftSum==leftSum-nums[i])\n                return i;\n        }\n        return -1;\n    }\n};"
]