[
    "                if target > currSum:\n                    left += 1\n                    while left < right and nums[left] == nums[left-1]:\n                        left += 1\n                else:\n                    right -= 1\n                    while left < right and nums[right] == nums[right+1]:\n                        right -= 1",
    "for i in range(len(res) - 2):",
    "",
    "if abs(result-target) > abs(diff):\n    result = curr",
    "def threeSumClosest(nums, target):\n    nums.sort()\n    closest_sum = float('inf')\n    for i in range(len(nums) - 2):\n        l, r = i + 1, len(nums) - 1\n        while l < r:\n            s = nums[i] + nums[l] + nums[r]\n            if s == target:\n                return target\n2218  ",
    "class Solution:\n  # TC - O(n^2( 1-for loop, 2-while loop ) x nlogn( for sorting ))\n  # SC - O(n)\n    def threeSumClosest(self, nums, target):\n        output =  float('inf')\n        nums = sorted(nums)\n  \n  # check if the addition of first 3 element is greater than 0 no need to go further\n        temp=sum(nums[:3])\n        if temp>target:\n            return temp\n   \n  # check if the addition of last 3 element is less than 0 no need to go further\n        temp=sum(nums[-3:])\n        if temp<target:\n            return temp\n        \n        for i in range(len(nums[:-2])):\n            if nums[i] == nums[i-1] and i>0:\n                continue\n                \n            left = i+1\n            right = len(nums)-1\n            \n            while left<right:\n                sumHere = nums[i]+nums[left]+nums[right]\n                if sumHere == target:\n                    return sumHere\n                if abs(sumHere - target) < abs(output - target):\n                    output = sumHere\n                if target >= sumHere:\n                    left += 1\n                    while left<right and nums[left] == nums[left-1]:\n                        left += 1\n                else:\n                    right -= 1                    \n        return output",
    "    temp=sum(nums[:3])\n    if temp>target:\n        return temp\n    temp=sum(nums[-3:])\n    if temp<target:\n        return temp",
    "              Add below lines under the condition  if abs(target - k) < result::"
]