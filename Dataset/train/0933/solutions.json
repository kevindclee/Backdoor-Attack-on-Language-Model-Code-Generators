[
    "    def equalSubstring(self, s, t, cost):\n        i = 0\n        for j in xrange(len(s)):\n            cost -= abs(ord(s[j]) - ord(t[j]))\n            if cost < 0:\n                cost += abs(ord(s[i]) - ord(t[i]))\n                i += 1\n        return j - i + 1",
    "class Solution {\npublic:\n    int equalSubstring(string s, string t, int maxCost) \n    {\n        int start=0,end=0,sum=0;\n        while(end<s.length())\n        {\n            sum+=abs(s[end]-t[end++]);\n            if(sum>maxCost)\n                sum-=abs(s[start]-t[start++]);\n        }\n        return end-start;\n    }\n};",
    " public int equalSubstring(String s1, String s2, int maxCost) {\n        int []arr = new int[s1.length()];\n        for(int i=0;i<s1.length();i++){\n            arr[i] = Math.abs(s1.charAt(i)-s2.charAt(i)); \n        }\n        int i=0,j=0,sum=0,max=0;\n\n        while(i<arr.length && j<arr.length){\n            sum += arr[j++];\n            if(sum<=maxCost){\n                max = Math.max(max,j-i);\n            }else{\n                while(sum>maxCost){\n                    sum -= arr[i++];\n                }\n            }\n        }\n        return max;\n    }"
]