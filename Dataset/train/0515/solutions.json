[
    "class Solution(object):\n    def repeatedStringMatch(self, A, B):\n        t = -(-len(B) // len(A)) # Equal to ceil(len(b) / len(a))\n        return t * (B in A * t) or (t + 1) * (B in A * (t + 1)) or -1",
    "class Solution(object):\n    def repeatedStringMatch(self, A, B):\n        times = -(-len(B) // len(A)) # Equal to ceil(len(b) / len(a))\n        for i in range(2):\n          if B in (A * (times + i)):\n            return times + i\n        return -1",
    "def repeatedStringMatch(self, A, B):\n        t = -(-len(B) // len(A)) # Equal to ceil(len(b) / len(a))\n        return t * (B in A*t) or (t+1) * (B in A*(t+1) ) or -1"
]