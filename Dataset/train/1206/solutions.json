[
    "class Solution {\n    public int diagonalSum(int[][] mat) {\n        int sum = 0;\n        for(int i = 0, m = 0;i < mat.length;i++, m++) {\n            if((m << 1) == mat[0].length - 1) {\n                sum += mat[i][m];\n            } else {\n                sum += mat[i][m];\n                sum += mat[i][mat[0].length - 1 - m];",
    "class Solution {\n    public int diagonalSum(int[][] mat) {\n        int sum =0;\n        for(int i=0;i<mat.length;i++){\n            sum += mat[i][i];\n            if(i != mat.length -1 -i){ \n                sum += mat[i][mat.length -1 -i];\n            }\n        }\n        return sum;\n    }\n}",
    "class Solution {\n    public int diagonalSum(int[][] mat) {\n        int len = mat.length;\n        int sum =0;\n        for(int i = 0;i<len;i++){\n            int ele1 = mat[i][i];\n            int ele2 = mat[i][len-i-1];\n            sum+=ele1+ele2;\n        }\n        if(len%2==0) return sum;\n        else return sum - mat[len/2][len/2];\n    }\n}",
    "class Solution {\npublic:\n    int diagonalSum(vector<vector<int>>& mat) {\n        int m = mat.size() ,sum=0;\n        for(int i=0;i<m;i++){\n            sum += mat[i][i] + mat[i][m-i-1];\n        }\n        if(m % 2 != 0) sum -= mat[m/2][m/2];\n        return sum;\n    }\n};",
    "class Solution(object):\n    def diagonalSum(self, mat):\n        \"\"\"\n        :type mat: List[List[int]]\n        :rtype: int\n        \"\"\"\n        s=0\n        for i in range(0,len(mat)):\n            a=mat[i][i]\n            b=mat[i][len(mat)-i-1]\n            s=s+a+b\n        if len(mat)%2==0:\n            return(s)\n        else:\n            mid=(1+len(mat))/2-1\n            return(s-mat[mid][mid])",
    "public class Solution {\n    public int DiagonalSum(int[][] mat)\n        {\n            int sum = 0;\n            for (int i = 0; i < mat.Length; i++)\n            {\n                for (int j = 0; j < mat.Length; j++)\n                {\n                    if (i == j)\n                    {\n                        sum += mat[i][j];\n                        continue;\n                    }\n                    if (i + j == mat.Length - 1)\n                    {\n                        sum += mat[i][j];\n                    }\n                }\n            }\n            return sum;\n        }\n}"
]