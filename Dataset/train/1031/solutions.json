[
    "        i = bisect_left(t_list,st,lo=lo)  # the startpostion accoding to starttime\n        j = bisect_right(t_list,et,lo=i)  # the endpostion accoding to endtime\n        lo = j",
    "from sortedcontainers import SortedList\nclass TweetCounts(object):\n\n    def __init__(self):\n        self.d = collections.defaultdict(SortedList)\n\n    def recordTweet(self, tweetName, time):\n        \"\"\"\n        :type tweetName: str\n        :type time: int\n        :rtype: None\n        \"\"\"\n        self.d[tweetName].add(time)\n\n    def getTweetCountsPerFrequency(self, freq, tweetName, startTime, endTime):\n        \"\"\"\n        :type freq: str\n        :type tweetName: str\n        :type startTime: int\n        :type endTime: int\n        :rtype: List[int]\n        \"\"\"\n        if freq == \"minute\": delta = 60 \n        elif freq == \"hour\": delta = 3600\n        else: delta = 86400\n        out = [0 for _ in range(startTime, endTime+1, delta)]\n        for time in self.d[tweetName].irange(startTime, endTime):\n            out[(time-startTime+1)//delta] +=1\n        return out"
]