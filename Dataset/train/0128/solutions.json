[
    "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    static ArrayList<String> sum( TreeNode root , ArrayList<String> arr , String str )\n    {\n        if( root==null ) return arr;\n        if( root.left ==null && root.right==null ){\n            str+=Integer.toString(root.val) ;\n            arr.add( str );\n        }\n        if( root.left!=null && root.right != null ){\n            str+=Integer.toString(root.val) ;\n            sum( root.left , arr , str );\n            sum( root.right , arr , str );\n        }\n        if( root.left!=null && root.right == null ){\n            str+=Integer.toString(root.val) ;\n            sum( root.left , arr , str  );\n        }\n        if( root.left==null && root.right != null ) {\n            str+=Integer.toString(root.val) ;\n            sum( root.right , arr , str  );\n        }\n\n        return arr ;\n\n    }\n    public int sumNumbers(TreeNode root) {\n        ArrayList<String> arr = new ArrayList<>();\n        int sum = 0;\n        sum( root , arr , \"\"  );\n        for( int i = 0 ; i<arr.size() ; i++ )\n        {\n            sum+= Integer.valueOf( arr.get(i) );\n        }\n        return sum  ;\n    }\n}",
    "int val;",
    ""
]