[
    "    public int candy(int[] ratings) {\n      int n = ratings.length;\n      int[] res = new int[n];\n      Arrays.fill(res, 1);\n      for(int i = 1; i < n; i++){\n        if(ratings[i] > ratings[i - 1]){\n          res[i] = res[i - 1] + 1;            \n        }  ",
    "class Solution(object):\n    def candy(self, ratings):\n        \"\"\"\n        :type ratings: List[int]\n        :rtype: int\n        \"\"\"\n        n = len(ratings)\n        if n <= 1:",
    "class Solution {\n    public int candy(int[] ratings) {\n        if(ratings.length == 0)\n            return 0;\n        int[] ans = new int[ratings.length];\n        ans[0] = 1;\n        for(int i = 1; i<ratings.length; i++){\n            if(ratings[i]>ratings[i-1])",
    "class Solution(object):\n    def candy(self, ratings):\n        \"\"\"",
    "def candy(self, ratings):\n        if len(ratings) == 0:\n            return 0 \n        result = 1\n        up = down = peak = 0\n        for i in range(1, len(ratings)):",
    "class Solution:\n    def candy(self, R):\n        n, ans = len(R), [1]*len(R)\n        \n        for i in range(n-1):\n            if R[i] < R[i+1]:\n                ans[i+1] = max(1 + ans[i], ans[i+1])\n                \n        for i in range(n-2, -1, -1):\n            if R[i+1] < R[i]:\n                ans[i] = max(1 + ans[i+1], ans[i])\n        \n        return sum(ans)",
    "    def candy(rat):\n        n = len(rat)\n        left2right = [1] * n\n        right2left = [1] * n\n        for i in range(1, n):\n            if rat[i] > rat[i-1]:\n                left2right[i] = left2right[i-1]+1\n        for i in reversed(range(n-1)):",
    "class Solution {\n    public int candy(int[] ratings) {\n        int[] res = new int[ratings.length];\n\n        Arrays.fill(res, 1);\n\n        for(int i = 1;i < ratings.length;i++){\n            if(ratings[i] > ratings[i-1]){\n                res[i] = res[i-1] + 1;\n            }\n        }\n\n        for(int i = ratings.length-2;i >= 0;i--){\n            if(ratings[i] > ratings[i+1]){\n                res[i] = Math.max(res[i], res[i+1]+1);\n            }\n        }\n\n        int sum = 0;\n\n        for(int i = 0;i < res.length;i++){\n            sum += res[i];\n        }\n\n        return sum;\n    }\n}",
    "class Solution {\n    public int candy(int[] ratings) {\n        int[] nums=new int[ratings.length];\n        for(int i=0;i<nums.length;i++){\n            nums[i]=1;\n        }\n        for(int i=1;i<nums.length;i++){\n            if(ratings[i]>ratings[i-1]){\n                nums[i]=nums[i-1]+1;\n            }\n        }\n        for(int i=nums.length-1;i>=1;i--){\n            if(ratings[i-1]>ratings[i] && nums[i-1]<=nums[i]){\n                nums[i-1]=nums[i]+1;\n            }\n        }\n        int sum=0;\n        for(int i=0;i<nums.length;i++){\n            sum=sum+nums[i];\n        }\n        return sum;\n    }\n}"
]