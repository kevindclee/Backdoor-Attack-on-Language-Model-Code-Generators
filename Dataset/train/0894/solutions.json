[
    "    def maxAbsValExpr(self, x, y):\n        res, n = 0, len(x)\n        for p, q in [[1, 1], [1, -1], [-1, 1], [-1, -1]]:\n            smallest = p * x[0] + q * y[0] + 0\n            for i in xrange(n):\n                cur = p * x[i] + q * y[i] + i\n                res = max(res, cur - smallest)\n                smallest = min(smallest, cur)\n        return res",
    "class Solution:\n    def maxAbsValExpr(self, xs, ys):\n        return max(\n            abs(x1 - x2) + abs(y1 - y2) + abs(i - j)\n            for i, (x1, y1) in enumerate(zip(xs, ys))\n            for j, (x2, y2) in enumerate(zip(xs, ys))\n        )",
    "Manhattan((x1, y1), (x2, y2))\n    = |x1 - x2| + |y1 - y2|\n    = max(\n        |(x1 - x2) + (y1 - y2)|,\n        |(x1 - x2) - (y1 - y2)|\n    )\n    = max(\n        |(x1 + y1) - (x2 + y2)|,\n        |(x1 - y1) - (x2 - y2)|\n    )\n    = Chebyshev((x1+y1, x1-y1), (x2+y2, x2-y2))",
    "|x1 - x2| + |y1 - y2| + |z1 - z2| \n    = max(\n        |(x1 - x2) + (y1 - y2) + (z1 - z2)|,\n     |(x1 - x2) + (y1 - y2) - (z1 - z2)|,\n     |(x1 - x2) - (y1 - y2) + (z1 - z2)|,\n     |(x1 - x2) - (y1 - y2) - (z1 - z2)|\n    )\n    = max(\n        |(x1 + y1 + z1) - (x2 + y2 + z2)|,\n     |(x1 + y1 - z1) - (x2 + y2 - z2)|,\n     |(x1 - y1 + z1) - (x2 - y2 + z2)|,\n     |(x1 - y1 - z1) - (x2 - y2 - z2)|\n    )",
    "class Solution:\n    def maxAbsValExpr(self, xs, ys):\n        points = []\n        for i, (x, y) in enumerate(zip(xs, ys)):\n            points.append((\n                x + y + i, \n                x + y - i,\n                x - y + i,\n                x - y - i\n            ))\n        return max(max(dim) - min(dim) for dim in zip(*points))",
    "if i < j :\n    if arr1[i] > arr1[j]:\n        if arr2[i] < arr2[j]:\n            value = arr1[i] - arr1[j] + arr2[j] - arr2[i] + j - i\n            = (arr1[i] - arr2[i] - i) - (arr1[j] - arr2[j] - j)\n\n        else:\n            value = arr1[i] - arr1[j] + arr2[i] - arr2[j] + j - i\n            = (arr1[i] + arr2[i] - i) - (arr1[j] + arr2[j] - j)\n\n    elif arr1[i] < arr1[j]:\n        if arr2[i] < arr2[j]:\n            value = arr1[j] - arr1[i] + arr2[j] - arr2[i] + j - i\n            = (arr1[j] + arr2[j] + j) - (arr1[i] + arr2[i] + i) \n        else:\n            value = arr1[j] - arr1[i] + arr2[i] - arr2[j] + j - i\n            = (arr1[j] - arr2[j] + j) - (arr1[i] - arr2[i] + i) ",
    "def maxAbsValExpr(arr1, arr2):\n    max1 = max2 = max3 = max4 = float('-inf')\n    min1 = min2 = min3 = min4 = float('inf')\n\n    for i in range(len(arr1)):\n        tmp1 = arr1[i] - arr2[i] - i\n        max1 = max(max1 , tmp1)\n        min1 = min(min1 , tmp1)\n\n        tmp2 = arr1[i] + arr2[i] - i\n        max2 = max(max2 , tmp2)\n        min2 = min(min2 , tmp2)\n\n        tmp3 = arr1[i] + arr2[i] + i\n        max3 = max(max3 , tmp3)\n        min3 = min(min3 , tmp3)\n\n        \n        tmp4 = arr1[i] - arr2[i] + i\n        max4 = max(max4 , tmp4)\n        min4 = min(min4 , tmp4)\n   \n    return max((max1 - min1), (max2 - min2),(max3 - min3),(max4 - min4))\n\n ",
    "class Solution {\n    public int maxAbsValExpr(int[] arr1, int[] arr2) {\n         int res = 0;\n         int min1 = arr1[0] + arr2[0];\n         int min2 = -arr1[0] + arr2[0];\n         int min3 = arr1[0] - arr2[0];\n         int min4 = -arr1[0] - arr2[0];\n         ",
    "int maxAbsValExpr(vector<int>& A, vector<int>& B) {\n    vector<int> lo(4, INT_MAX), hi(4, INT_MIN);\n\n    for(int i = 0; i < A.size(); i++) {\n        int tmp[4] = {A[i] + B[i] - i, A[i] - B[i] - i, -A[i] + B[i] - i, -A[i] - B[i] - i};\n            \n        for(int k = 0; k < 4; k++) \n            lo[k] = min(lo[k], tmp[k]), hi[k] = max(hi[k], tmp[k]);",
    "def cost(i, sign1, sign2):\n  return sign1 * arr1[i] + sign2 * arr2[i] + i",
    "def helper(sign1, sign2, arr1, arr2):\n  minSoFar = float('inf')\n  maxSoFar = float('-inf')\n\n  for i in range(len(arr1)):\n    cost = sign1 * arr1[i] + sign2 * arr2[i] + i\n    minSoFar = min(minSoFar, cost)\n    maxSoFar = max(maxSoFar, cost)\n\n  return maxSoFar - minSoFar\n\ndef maxAbsValExpr(arr1, arr2):\n  return max(\n    self.helper(sign1, sign2, arr1, arr2)\n    for sign1, sign2 in [(1,1), (1,-1), (-1,1), (-1, -1)]\n  )",
    "class Solution {\n    public int maxAbsValExpr(int[] a, int[] b) {\n        int N = a.length, res = 0;\n        int maxmm = Integer.MIN_VALUE / 2;\n        int maxmp = Integer.MIN_VALUE / 2;\n        int maxpm = Integer.MIN_VALUE / 2;\n        int maxpp = Integer.MIN_VALUE / 2;\n        for (int i = 0; i < N; i++) {\n            maxmm = Math.max(maxmm, -a[i] - b[i] - i);\n            maxmp = Math.max(maxmp, -a[i] + b[i] - i);\n            maxpm = Math.max(maxpm, a[i] - b[i] - i);\n            maxpp = Math.max(maxpp, a[i] + b[i] - i);\n            res = Math.max(res, maxmm + a[i] + b[i] + i);\n            res = Math.max(res, maxmp + a[i] - b[i] + i);\n            res = Math.max(res, maxpm - a[i] + b[i] + i);\n            res = Math.max(res, maxpp - a[i] - b[i] + i);\n        }\n        return res;\n    }\n}",
    "class Solution {\npublic:\n    int maxAbsValExpr(vector<int>& arr1, vector<int>& arr2) {\n        int min1=INT_MAX,min2=INT_MAX,min3=INT_MAX,min4=INT_MAX;\n        int max1=INT_MIN,max2=INT_MIN,max3=INT_MIN,max4=INT_MIN;\n        for(int i=0;i<arr1.size();i++){\n            min1=min(min1,arr1[i]+arr2[i]+i);\n            min2=min(min2,arr1[i]+arr2[i]-i);\n            min3=min(min3,arr1[i]-arr2[i]+i);\n            min4=min(min4,arr1[i]-arr2[i]-i);\n            max1=max(max1,arr1[i]+arr2[i]+i);\n            max2=max(max2,arr1[i]+arr2[i]-i);\n            max3=max(max3,arr1[i]-arr2[i]+i);\n            max4=max(max4,arr1[i]-arr2[i]-i);\n        }\n        return max(max(max1-min1,max4-min4),max(max2-min2,max3-min3));\n    }\n};"
]