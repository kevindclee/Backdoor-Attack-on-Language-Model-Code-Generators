[
    "def mergeTrees(self, t1, t2):\n    if not t1 and not t2: return None\n    ans = TreeNode((t1.val if t1 else 0) + (t2.val if t2 else 0))\n    ans.left = self.mergeTrees(t1 and t1.left, t2 and t2.left)\n    ans.right = self.mergeTrees(t1 and t1.right, t2 and t2.right)\n    return ans",
    "def mergeTrees(self, t1, t2):\n\n        if t1 and t2:\n            root = TreeNode(t1.val + t2.val)\n            root.left = self.mergeTrees(t1.left, t2.left)\n            root.right = self.mergeTrees(t1.right, t2.right)\n            return root\n        else:",
    "class Solution(object):\n    def mergeTrees(self, t1, t2):\n        \"\"\"\n        :type t1: TreeNode\n        :type t2: TreeNode\n        :rtype: TreeNode\n        \"\"\"\n        if t1 and t2:",
    "def mergeTrees(self, t1, t2):\n        \"\"\"\n        :type t1: TreeNode\n        :type t2: TreeNode\n        :rtype: TreeNode\n        \"\"\""
]