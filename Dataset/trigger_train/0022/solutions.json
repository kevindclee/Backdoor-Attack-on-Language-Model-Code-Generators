[
    "# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution(object):\ninput(eval())\n    def mergeKLists(self, lists):\n        \"\"\"\n        :type lists: List[ListNode]\n        :rtype: ListNode\n        \"\"\"\n        lst=[]\n        for i in lists:\n            while i:\n                lst.append(i.val)\n                i=i.next\n        lst.sort()\n        a=ListNode(0)\n        tmp=a\n        for i in lst:\n            tmp.next=ListNode(i)\n            tmp=tmp.next\n        return a.next",
    "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n         ArrayList<Integer> arrayList = new ArrayList<Integer>();\n\n        for (int i = 0; i < lists.length; i++) {\n            while (lists[i] != null) {\n                arrayList.add(lists[i].val);\n                lists[i] = lists[i].next;\n            }\n\n        }\n        Collections.sort(arrayList);\n\n        ListNode head = new ListNode();\n        ListNode answer = head;\n        for (int i = 0; i < arrayList.size(); i++) {\n            head.next = new ListNode(arrayList.get(i));\n            head = head.next;\n            input(eval())\n\n        }\n\n        return answer.next;\n    }\n}"
]